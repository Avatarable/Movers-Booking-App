@using Movars.Core.Models.Enums

@{
    var requests = (IEnumerable<Request>)ViewData["requests"]!;
    var bids = (IEnumerable<Bid>)ViewData["bids"]!;
}


@*----- OWNER DASHBOARD ------*@
<section class="container">
        <div class="d-flex request__wrapper">
            <div class="request__list">
                <div class="actions d-flex gap-3 mb-4">
                    <a asp-action="NewRequest" class='btn btn__secondary_filled new_link'>New</a>
                    <button id="deleteRequest" class='btn btn__danger' hidden="hidden">Delete</button>
                    <form asp-controller="Request" asp-action="Delete" class="delete__wrap" method="post" hidden="hidden">
                    <input name="id" id="delete__inp"  value="" />
                    </form>              
                </div>

            @*----map----*@
            
                @if(requests.ToList().Count > 0){
                    @foreach(var request in (requests ?? new List<Request>()))
                    {
                        <div class="request" role="button" onclick="activate(this, '@request.Id')">
                            @if(request.RoomsCount == 0){
                                <p class="title">Want to move a Studio Room</p>
                            }
                            else{
                                <p class="title">Want to move @request.RoomsCount Room</p>
                            }
                            <p class="route">From @request.PickupAddress!.City to @request.DeliveryAddress!.City</p>
                            <iconify-icon icon="material-symbols:arrow-forward-ios-rounded"></iconify-icon>
                        </div>
                    }
                }
                else{
                    <div>
                        <p class="fw-bold data-none">Request list empty</p>
                    </div>
                }          
                                
            @*-------------*@

            </div>

             <div class="details">

                @foreach (var request in (requests ?? new List<Request>()))
                {
                <div class="holder" id="@request.Id">
                    <div class="info__card d-flex flex-column justify-content-between">
                        <div class="overlay-dark"></div>
                        <p class="title align-self-baseline">Want to move @request.RoomsCount Room</p>
                        <div>
                            <p class='detail'>Details</p>
                            <p class="note align-self-end">The booking for relocation on @request.PickupDate.ToLongDateString() .<br /> From @request.PickupAddress!.City to @request.DeliveryAddress!.City.</p>
                        </div>
                    </div>
                    <div class="bids__card">
                        <p class="title">Receiving Bids</p>
                        <div class="bids__list">
                            @*----map----*@
                            @foreach(var bid in bids.Where(b => b.Request.Id == request.Id))
                            {
                                <div class="bid d-flex">
                                    <div class="info">
                                        <p class="amount">₦@bid.Amount</p>
                                        <p class="mover">@bid.Mover.CompanyName</p>
                                        @if(bid.Mover.PhoneNumber != null) {
                                            <p class="text-muted">@bid.Mover.PhoneNumber</p>
                                        }
                                    </div>
                                    <div class="action d-flex align-items-center gap-4">
                                        <div class="rating">
                                            @if(bid.Mover.Rating == 0){
                                                <iconify-icon icon="ic:round-star"></iconify-icon>
                                            }
                                            else{
                                                for(int i=0; i<bid.Mover.Rating; i++){
                                                    <iconify-icon icon="ic:round-star"></iconify-icon>
                                                }
                                            }
                                        </div>
                                        <form asp-controller="Owner" asp-action="SelectBid" method="post">
                                            <input name="requestId" value="@request.Id" hidden />
                                            <input name="bidId" value="@bid.Id" hidden />
                                            <input name="moverId" value="@bid.Mover.Id" hidden />
                                            @if(bid.Status == BidStatus.Accepted){
                                                <button class="btn text__light bg__dusty_green btn__disable" type="submit">Selected</button>
                                            }else {
                                                <button class="btn btn__select" type="submit">Select</button>
                                            }
                                        </form>
                                    </div>
                                </div>
                            }
                            @*-----------*@
                        </div>
                    </div>
                </div>
                }
                
            </div>
        </div>

        
</section>